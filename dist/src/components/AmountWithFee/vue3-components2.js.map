{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/AmountWithFee/AmountWithFee.vue"],"sourcesContent":["<template>\n    <div class=\"amount-with-fee\">\n        <AmountInput class=\"value\" v-model=\"liveAmount\" :class=\"{ invalid: !isValid && liveAmount > 0 }\" ref=\"amountInput$\" />\n        <div class=\"fee-section nq-text-s\">\n            <div v-if=\"!isValid && liveAmount\" class=\"nq-red\"><slot name=\"insufficient-balance-error\">{{ $t('Insufficient balance') }}</slot></div>\n            <div v-else>\n                <span v-if=\"fiatAmount && fiatCurrency\" class=\"fiat\">\n                    ~<FiatAmount :amount=\"fiatAmount\" :currency=\"fiatCurrency\" />\n                </span>\n                <span v-if=\"modelValue.fee\" class=\"fee\">\n                    + <Amount :amount=\"modelValue.fee\" :minDecimals=\"0\" :maxDecimals=\"5\" /> {{ $t('fee') }}\n                </span>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, watch } from 'vue';\n\nimport { FiatApiSupportedFiatCurrency } from '@nimiq/utils';\nimport Amount from '../Amount/Amount.vue';\nimport AmountInput from '../AmountInput/AmountInput.vue';\nimport FiatAmount from '../FiatAmount/FiatAmount.vue';\nimport { loadI18n } from '../../i18n/I18nComposable';\n\nexport enum AmountWithFeeEvent {\n    MODELVALUE_UPDATE = 'update:modelValue',\n}\n\nexport default defineComponent({\n    name: 'AmountWithFee',\n    emits: Object.values(AmountWithFeeEvent),\n    props: {\n        modelValue: {\n            type: Object as () => ({ amount: number, fee: number, isValid: boolean }),\n            default: () => ({ amount: 0, fee: 0, isValid: false }),\n        },\n        availableBalance: {\n            type: Number,\n            default: 0,\n        },\n        fiatAmount: Number,\n        fiatCurrency: String as () => FiatApiSupportedFiatCurrency,\n    },\n    methods: { $t: loadI18n('AmountWithFee') },\n    setup(props, context) {\n        const amountInput$ = ref<(typeof AmountInput) | null>(null);\n\n        const liveAmount = ref(props.modelValue.amount);\n\n        const isValid = computed(() => {\n            return liveAmount.value > 0\n                && liveAmount.value + props.modelValue.fee <= props.availableBalance;\n        });\n\n        onMounted(watchAmountChange);\n\n        watch(isValid, watchAvailableAmountChange, { immediate: true });\n        function watchAvailableAmountChange() {\n            context.emit(AmountWithFeeEvent.MODELVALUE_UPDATE, {\n                amount: liveAmount.value,\n                fee: props.modelValue.fee,\n                isValid: isValid.value,\n            });\n        }\n\n        watch(liveAmount, watchAmountChange, { immediate: true });\n        function watchAmountChange() {\n            context.emit(AmountWithFeeEvent.MODELVALUE_UPDATE, {\n                amount: liveAmount.value,\n                fee: props.modelValue.fee,\n                isValid: isValid.value,\n            });\n        }\n\n        function focus() {\n            if (amountInput$.value) amountInput$.value.focus();\n        }\n\n        context.expose({ focus });\n\n        return {\n            amountInput$,\n            liveAmount,\n            isValid,\n        };\n    },\n    components: {\n        Amount,\n        AmountInput,\n        FiatAmount,\n    },\n})\n</script>\n\n<style scoped>\n    .amount-with-fee {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 100%;\n    }\n\n    .value {\n        display: flex;\n        align-items: baseline;\n    }\n\n    .amount-input:deep(input) {\n        padding-top: 0;\n        padding-bottom: 0;\n    }\n\n    .amount-input.invalid:deep(input),\n    .amount-input.invalid:deep(.nim) {\n        border-color: rgb(216, 65, 51, 0.2); /* Based on Nimiq Red */\n        color: var(--nimiq-red) !important;\n    }\n\n    .fee-section {\n        color: rgba(31, 35, 72, 0.5);\n        min-height: 2rem;\n    }\n\n    .fiat {\n        display: inline-flex;\n    }\n</style>\n"],"names":["AmountWithFeeEvent","_sfc_main","defineComponent","loadI18n","props","context","amountInput$","ref","liveAmount","isValid","computed","onMounted","watchAmountChange","watch","watchAvailableAmountChange","focus","Amount","AmountInput","FiatAmount"],"mappings":";;;;;AA0BY,IAAAA,sBAAAA,OACRA,EAAA,oBAAoB,qBADZA,IAAAA,KAAA,CAAA,CAAA;AAIZ,MAAAC,IAAeC,EAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO,OAAO,OAAOF,CAAkB;AAAA,EACvC,OAAO;AAAA,IACH,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS,OAAO,EAAE,QAAQ,GAAG,KAAK,GAAG,SAAS;IAClD;AAAA,IACA,kBAAkB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,IACZ,cAAc;AAAA,EAClB;AAAA,EACA,SAAS,EAAE,IAAIG,EAAS,eAAe,EAAE;AAAA,EACzC,MAAMC,GAAOC,GAAS;AACZ,UAAAC,IAAeC,EAAiC,IAAI,GAEpDC,IAAaD,EAAIH,EAAM,WAAW,MAAM,GAExCK,IAAUC,EAAS,MACdF,EAAW,QAAQ,KACnBA,EAAW,QAAQJ,EAAM,WAAW,OAAOA,EAAM,gBAC3D;AAED,IAAAO,EAAUC,CAAiB,GAE3BC,EAAMJ,GAASK,GAA4B,EAAE,WAAW,GAAM,CAAA;AAC9D,aAASA,IAA6B;AAClC,MAAAT,EAAQ,KAAK,qBAAsC;AAAA,QAC/C,QAAQG,EAAW;AAAA,QACnB,KAAKJ,EAAM,WAAW;AAAA,QACtB,SAASK,EAAQ;AAAA,MAAA,CACpB;AAAA,IACL;AAEA,IAAAI,EAAML,GAAYI,GAAmB,EAAE,WAAW,GAAM,CAAA;AACxD,aAASA,IAAoB;AACzB,MAAAP,EAAQ,KAAK,qBAAsC;AAAA,QAC/C,QAAQG,EAAW;AAAA,QACnB,KAAKJ,EAAM,WAAW;AAAA,QACtB,SAASK,EAAQ;AAAA,MAAA,CACpB;AAAA,IACL;AAEA,aAASM,IAAQ;AACb,MAAIT,EAAa,SAAOA,EAAa,MAAM;IAC/C;AAEQ,WAAAD,EAAA,OAAO,EAAE,OAAAU,EAAA,CAAO,GAEjB;AAAA,MACH,cAAAT;AAAA,MACA,YAAAE;AAAA,MACA,SAAAC;AAAA,IAAA;AAAA,EAER;AAAA,EACA,YAAY;AAAA,IACR,QAAAO;AAAA,IACA,aAAAC;AAAA,IACA,YAAAC;AAAA,EACJ;AACJ,CAAC;"}