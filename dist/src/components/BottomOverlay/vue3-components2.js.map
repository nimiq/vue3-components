{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/BottomOverlay/BottomOverlay.vue"],"sourcesContent":["<template>\n    <div class=\"bottom-overlay\" :class=\"[theme, { 'has-close-button': hasCloseButton }]\">\n        <slot></slot>\n        <CloseButton v-if=\"hasCloseButton\"\n            class=\"close-button\"\n            :class=\"{ 'inverse': [BottomOverlayTheme.DARK, BottomOverlayTheme.GREEN].includes(theme as any) }\"\n            @click=\"onClose\"\n        />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, getCurrentInstance } from 'vue';\nimport CloseButton from '../CloseButton/CloseButton.vue';\n\nexport enum BottomOverlayEvent {\n    CLOSE = 'close',\n}\n\nexport enum BottomOverlayTheme {\n    DARK = 'dark',\n    LIGHT = 'light',\n    GREEN = 'green',\n}\n\nexport default defineComponent({\n    name: 'BottomOverlay',\n    emits: Object.values(BottomOverlayEvent),\n    props: {\n        theme: {\n            type: String,\n            default: BottomOverlayTheme.DARK,\n            validator: (theme: any) => typeof theme === 'string'\n                && Object.values(BottomOverlayTheme).includes(theme as any),\n        }\n    },\n    setup(props, context) {\n        const hasCloseButton = ref(false);\n\n        function onClose() {\n            context.emit(BottomOverlayEvent.CLOSE);\n        }\n\n        async function onListenerChange() {\n            /* This was using `context.attrs.onClose` with vue2 instead of `getCurrentInstance()?.vnode.props?.onClose`,\n            ** but when migrating to vue3 and setting the emits property on the component the onClose attrs stayed empty,\n            ** even though detecting changes to it and triggerring the watcher.\n            **\n            ** Not setting the emits seems to fix the issue, but that is not the recommended way of doing it.\n            ** We thus went with this solution of directly getting the onClose attribute from the vnode instance directly,\n            ** but if we find a better way to do it in the future, it would be preferable over this hacky solution.\n            **\n            ** Previous version: `hasCloseButton.value = !!context.attrs.onClose;`\n            */\n            hasCloseButton.value = !!getCurrentInstance()?.vnode.props?.onClose;\n        }\n\n        watch(() => context.attrs.onClose, onListenerChange, { immediate: true });\n\n        return {\n            hasCloseButton,\n            onClose,\n            BottomOverlayTheme,\n        };\n    },\n    components: {\n        CloseButton,\n    },\n})\n</script>\n\n<style scoped>\n    .bottom-overlay {\n        position: fixed;\n        left: 50%;\n        bottom: 2rem;\n        max-width: 110rem;\n        padding: 1.5rem 2rem 1.75rem 2rem;\n        border-radius: 1.25rem;\n        box-shadow: 0 0 2.5rem rgba(0, 0, 0, 0.111158);\n        font-size: 2rem;\n        line-height: 1.3;\n        transform: translateX(-50%);\n    }\n\n    .dark {\n        background: var(--nimiq-blue);\n        color: white;\n    }\n\n    .light {\n        background: white;\n        color: var(--nimiq-blue);\n    }\n\n    .green {\n        background: var(--nimiq-green);\n        color: white;\n    }\n\n    .has-close-button {\n        padding-right: 6.5rem;\n    }\n\n    .close-button {\n        position: absolute;\n        top: 1.5rem;\n        right: 1.5rem;\n    }\n\n    .green .close-button:deep(.nq-icon) {\n        opacity: 0.4;\n    }\n\n    .green .close-button:hover:deep(.nq-icon),\n    .green .close-button:focus:deep(.nq-icon) {\n        opacity: 0.7;\n    }\n\n    @media (max-width: 912px) {\n        .bottom-overlay {\n            bottom: 1.5rem;\n            width: calc(100% - 3rem);\n        }\n    }\n\n    @media (max-width: 450px) {\n        .bottom-overlay {\n            left: 0;\n            bottom: 0;\n            width: 100%;\n            padding: 2.5rem;\n            border-bottom-left-radius: 0;\n            border-bottom-right-radius: 0;\n            transform: none;\n        }\n\n        .has-close-button {\n            padding-right: 7rem;\n        }\n\n        .close-button {\n            top: 2rem;\n            right: 2rem;\n        }\n    }\n</style>\n"],"names":["BottomOverlayEvent","BottomOverlayTheme","_sfc_main","defineComponent","theme","props","context","hasCloseButton","ref","onClose","onListenerChange","_b","_a","getCurrentInstance","watch","CloseButton"],"mappings":";;AAeY,IAAAA,sBAAAA,OACRA,EAAA,QAAQ,SADAA,IAAAA,KAAA,CAAA,CAAA,GAIAC,sBAAAA,OACRA,EAAA,OAAO,QACPA,EAAA,QAAQ,SACRA,EAAA,QAAQ,SAHAA,IAAAA,KAAA,CAAA,CAAA;AAMZ,MAAAC,IAAeC,EAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO,OAAO,OAAOH,CAAkB;AAAA,EACvC,OAAO;AAAA,IACH,OAAO;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW,CAACI,MAAe,OAAOA,KAAU,YACrC,OAAO,OAAOH,CAAkB,EAAE,SAASG,CAAY;AAAA,IAClE;AAAA,EACJ;AAAA,EACA,MAAMC,GAAOC,GAAS;AACZ,UAAAC,IAAiBC,EAAI,EAAK;AAEhC,aAASC,IAAU;AACf,MAAAH,EAAQ,KAAK;IACjB;AAEA,mBAAeI,IAAmB;;AAW9B,MAAAH,EAAe,QAAQ,CAAC,GAACI,KAAAC,IAAAC,EAAmB,MAAnB,gBAAAD,EAAsB,MAAM,UAA5B,QAAAD,EAAmC;AAAA,IAChE;AAEM,WAAAG,EAAA,MAAMR,EAAQ,MAAM,SAASI,GAAkB,EAAE,WAAW,IAAM,GAEjE;AAAA,MACH,gBAAAH;AAAA,MACA,SAAAE;AAAA,MACA,oBAAAR;AAAA,IAAA;AAAA,EAER;AAAA,EACA,YAAY;AAAA,IACR,aAAAc;AAAA,EACJ;AACJ,CAAC;"}