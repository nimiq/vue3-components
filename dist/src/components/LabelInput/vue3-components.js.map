{"version":3,"file":"vue3-components.js","sources":["../../../../src/components/LabelInput/LabelInput.vue"],"sourcesContent":["<template>\n    <form class=\"label-input\" @submit.prevent=\"onBlur\" :class=\"{ disabled }\">\n        <span class=\"width-finder width-placeholder\" ref=\"widthPlaceholder$\">{{\n            placeholder || $t('Name your address')\n        }}</span>\n        <span class=\"width-finder width-value\" ref=\"widthValue$\">{{ liveValue }}</span>\n        <input type=\"text\" class=\"nq-input\" :class=\"{ 'vanishing': vanishing }\"\n            :placeholder=\"placeholder || $t('Name your address')\"\n            :style=\"{ width: `${width}px` }\"\n            v-model=\"liveValue\"\n            :disabled=\"disabled\"\n            @input=\"onInput\"\n            @blur=\"onBlur\"\n            @paste=\"$emit(LabelInputEvent.PASTE, $event)\"\n            ref=\"input$\">\n    </form>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, ref, watch } from 'vue';\nimport { Utf8Tools } from '@nimiq/utils';\nimport { loadI18n } from '../../i18n/I18nComposable';\n\nexport enum LabelInputEvent {\n    MODELVALUE_UPDATE = 'update:modelValue',\n    CHANGED = 'changed',\n    PASTE = 'paste',\n}\n\nexport default defineComponent({\n    name: 'LabelInput',\n    emits: Object.values(LabelInputEvent),\n    props: {\n        maxBytes: Number, // was a `protected` prop with vue2 class component\n        modelValue: {\n            type: String,\n            default: '',\n        },\n        placeholder: String,\n        vanishing: {\n            type: Boolean,\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    methods: { $t: loadI18n('LabelInput') },\n    setup(props, context) {\n        const input$ = ref<HTMLInputElement | null>(null);\n        const widthPlaceholder$ = ref<HTMLSpanElement | null>(null);\n        const widthValue$ = ref<HTMLSpanElement | null>(null);\n\n        const liveValue = ref('');\n        const lastValue = ref('');\n        const lastEmittedValue = ref('');\n        const width = ref(50);\n\n        function focus() {\n            if (input$.value) input$.value.focus();\n        }\n\n        function onInput() {\n            if (props.maxBytes) {\n                const lengthInBytes = Utf8Tools.stringToUtf8ByteArray(liveValue.value!).byteLength;\n                if (lengthInBytes > props.maxBytes) {\n                    liveValue.value = lastValue.value;\n                    return;\n                }\n                lastValue.value = liveValue.value;\n            }\n            context.emit(LabelInputEvent.MODELVALUE_UPDATE, liveValue.value);\n        }\n\n        function onBlur() {\n            if (liveValue.value === lastEmittedValue.value) return;\n            context.emit(LabelInputEvent.CHANGED, liveValue.value);\n            lastEmittedValue.value = liveValue.value;\n            if (input$.value) input$.value.blur();\n        }\n\n        watch(() => props.modelValue, updateValue, { immediate: true })\n        function updateValue(newValue: string) {\n            liveValue.value = newValue;\n            lastValue.value = liveValue.value;\n            lastEmittedValue.value = lastValue.value;\n        }\n\n        watch(liveValue, updateWidth, { immediate: true });\n        async function updateWidth() {\n            await nextTick(); // Await updated DOM\n            if (!widthPlaceholder$.value || !widthValue$.value || !input$.value) return;\n\n            const placeholderWidth = widthPlaceholder$.value.offsetWidth;\n            const valueWidth = widthValue$.value.offsetWidth;\n\n            // Add an additional padding, so entering new letters does not flicker the input before width is adjusted\n            //\n            // A third of the font-size was found to be a good compromise between not adding too big a gap and\n            // still resonably supporting wide letters (it still jumps for W at bigger font-sizes, but that's why\n            // it's called a compromise).\n            const fontSize = parseFloat(window.getComputedStyle(input$.value, null)\n                .getPropertyValue('font-size'));\n\n            width.value = (liveValue.value.length ? valueWidth : placeholderWidth) + fontSize / 3;\n        }\n\n        context.expose({ focus });\n\n        return {\n            input$,\n            widthPlaceholder$,\n            widthValue$,\n\n            liveValue,\n            width,\n\n            onInput,\n            onBlur,\n\n            LabelInputEvent,\n        };\n    },\n})\n</script>\n\n<style scoped>\n    .label-input {\n        position: relative;\n        overflow: hidden; /* limit width-finder width to parent available width */\n        max-width: 100%;\n        box-sizing: border-box;\n    }\n\n    .width-finder {\n        position: absolute;\n        color: transparent;\n        pointer-events: none;\n        user-select: none;\n        white-space: pre;\n        padding: 0 2.25rem; /* nq-input padding + border-width */\n    }\n\n    input {\n        padding-right: 0;\n        max-width: 100%;\n        transition:\n            color .2s ease, box-shadow .2s ease, /* Copied from Nimiq Styles */\n            width 50ms ease-out;\n    }\n\n    input:disabled {\n        pointer-events: none; /* Prevent hover effects */\n    }\n</style>\n"],"names":["_sfc_render","_ctx","_cache","$props","$setup","$options","_openBlock","_createElementBlock","_normalizeClass","_withModifiers","args","_toDisplayString","_createElementVNode","_withDirectives","_normalizeStyle","$event"],"mappings":";;;;;;SACeA,EAACC,GAAAC,GAAAC,GAAaC,MAAoCC,GAAQ;SAA1CC,EAAM,GAAAC,EAAA,QAAA;AAAA,IAAA,OAAAC,EAAA,CAAA,eAAA,EAAA,UAAAP,EAAA,SAAA,CAAA,CAAA;AAAA,IAC7B,UAESC,EAAA,OAAAA,EAAA,KAAAO,EAAA,IAAAC,MAAAT,EAAA,UAAAA,EAAA,OAAA,GAAAS,CAAA,GAAA,CAAA,SAAA,CAAA;AAAA,EAAA,GAAA;AAAA,MAFwC,QAAmB;AAAA,MAAA,OAAA;AAAA,MAGpE,KAAA;AAAA,IAAA,GAAMC,EAAMV,EAA0B,eAAAA,EAAA,GAAA,mBAAA,CAAA,GAAA,GAAA;AAAA,IAAkBW,EAAA,QAAA;AAAA,MAAA,OAAA;AAAA;OACjDD,EAAWV,EAAA,SAAA,GAAA,GAAA;AAAA,IAAAY,EAAMD,EAAW,SAAA;AAAA,MAC9B,MAAA;AAAA,MACA,OAAKJ,eAAc,EAAK,WAAAP,EAAA,UAAA,CAAA,CAAA;AAAA,MAAA,aAAAA,EAAA,eAAAA,EAAA,GAAA,mBAAA;AAAA,MAExB,OAAkBa,EAAA,EAAA,OAAA,GAAAb,EAAA,WAAA;AAAA,MAClB,uBAAKC,EAAE,OAAAA,EAAA,KAAA,CAAAa,MAAAd,EAAA,YAAAc;AAAA,MACP,UAAId,EAAA;AAAA,MACJ,SAAKC,EAAA,OAAAA,EAAA,KAAA,IAAAQ,MAAET,EAAM,WAAAA,EAAA,QAAgB,GAAOS,CAAA;AAAA,MACrC,QAAIR,EAAQ,OAAAA,EAAA,KAAA,IAAAQ,MAAAT,EAAA,UAAAA,EAAA,OAAA,GAAAS,CAAA;AAAA,MAAA,SAAAR,EAAA,OAAAA,EAAA,KAAA,CAAAa,MAAAd,EAAA,MAAAA,EAAA,gBAAA,OAAAc,CAAA;AAAA;;;;;;;"}