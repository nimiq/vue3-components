{"version":3,"file":"vue3-components.js","sources":["../../../../src/components/AddressDisplay/AddressDisplay.vue"],"sourcesContent":["<template>\n    <component :is=\"copyable ? 'Copyable' : 'div'\" :text=\"text\" class=\"address-display\" :class=\"`format-${format}`\">\n        <span v-for=\"(chunk, index) in chunks\" class=\"chunk\" :key=\"chunk + index\">{{ chunk }}<span v-if=\"chunkTrailingSpaces\" class=\"space\">&nbsp;</span></span>\n    </component>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue';\nimport Copyable from '../Copyable/Copyable.vue';\n\nexport default defineComponent({\n    name: 'AddressDisplay',\n    components: { Copyable },\n    props: {\n        address: {\n            type: String,\n            required: true,\n        },\n        format: {\n            type: String as () => 'nimiq' | 'ethereum',\n            default: 'nimiq',\n        },\n        copyable: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    setup(props) {\n        const chunks = computed(() => {\n            switch (props.format) {\n                case 'nimiq':\n                    if (!props.address) return new Array(9).fill('-');\n                    return props.address.replace(/[+ ]/g, '').match(/.{4}/g)!;\n                case 'ethereum':\n                    if (!props.address) return new Array(3).fill('-');\n                    return props.address.replace(/[+ ]/g, '').match(/.{14}/g)!;\n                default:\n                    return [props.address];\n            }\n        });\n\n        const text = computed(() => {\n            switch (props.format) {\n                case 'nimiq': return chunks.value.join(' ').toUpperCase();\n                default: return chunks.value.join('');\n            }\n        });\n\n        const chunkTrailingSpaces = computed(() => props.format === 'nimiq');\n\n        return { chunks, text, chunkTrailingSpaces };\n    },\n})\n</script>\n\n<style scoped>\n    .address-display {\n        width: 100%;\n        box-sizing: content-box;\n        color: rgba(31, 35, 72, .5); /* nimiq-blue with .5 opacity */\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        font-size: 3rem;\n    }\n\n    .format-nimiq {\n        max-width: 28.25rem;\n    }\n\n    .format-ethereum {\n        max-width: 27rem;\n    }\n\n    .address-display.copyable:hover,\n    .address-display.copyable:focus,\n    .address-display.copyable.copied {\n        font-weight: 500;\n    }\n\n    .chunk {\n        font-family: 'Fira Mono', monospace;\n        margin: 0.875rem 0;\n        line-height: 1.11;\n        text-align: center;\n        box-sizing: border-box;\n    }\n\n    .format-nimiq .chunk {\n        width: 33%;\n        text-transform: uppercase;\n    }\n\n    .format-ethereum .chunk {\n        width: 100%;\n    }\n\n    .space {\n        font-size: 0;\n    }\n</style>\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","_normalizeClass","_createElementBlock","_Fragment","_renderList","chunk","index","_createTextVNode","_toDisplayString","_createCommentVNode"],"mappings":";;;;MAE8HA,IAAa;AAAA,EAAA,KAAA;AAAA;;SADnFC,EAAMC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA;AAAO,SAAAC,EAAA,GAAAC,EAACC,EAAoCR,EAAM,WAAA,aAAA,KAAA,GAAA;AAAA,IAAA,MAAAA,EAAA;AAAA,IAClE,OAAAS,EAAA,CAAA,mBAAA,UAAAT,EAAA,QAAA,CAAA;AAAA,EAAA,GAAA;AAAA;SAAO,EAAO,GAAAU,EAAAC,GAAA,MAAAC,EAAAZ,EAAA,QAAA,CAAAa,GAAAC,OAAOR,EAAA,GAAaI,EAAA,QAAA;AAAA,QAAA,OAAA;AAAA;MAAyB,GAAA;AAAA,QAAAK,EAAAC,EAAZH,CAA4D,GAAA,CAAA;AAAA,QAAAb,EAAA,uBAAAM,EAAA,GAAAI,EAAA,QAAAZ,GAAA,MAAA,KAAAmB,EAAA,IAAA,EAAA;AAAA;;;;;;"}