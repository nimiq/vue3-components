{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/AddressDisplay/AddressDisplay.vue"],"sourcesContent":["<template>\n    <component :is=\"copyable ? 'Copyable' : 'div'\" :text=\"text\" class=\"address-display\" :class=\"`format-${format}`\">\n        <span v-for=\"(chunk, index) in chunks\" class=\"chunk\" :key=\"chunk + index\">{{ chunk }}<span v-if=\"chunkTrailingSpaces\" class=\"space\">&nbsp;</span></span>\n    </component>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue';\nimport Copyable from '../Copyable/Copyable.vue';\n\nexport default defineComponent({\n    name: 'AddressDisplay',\n    components: { Copyable },\n    props: {\n        address: {\n            type: String,\n            required: true,\n        },\n        format: {\n            type: String as () => 'nimiq' | 'ethereum',\n            default: 'nimiq',\n        },\n        copyable: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    setup(props) {\n        const chunks = computed(() => {\n            switch (props.format) {\n                case 'nimiq':\n                    if (!props.address) return new Array(9).fill('-');\n                    return props.address.replace(/[+ ]/g, '').match(/.{4}/g)!;\n                case 'ethereum':\n                    if (!props.address) return new Array(3).fill('-');\n                    return props.address.replace(/[+ ]/g, '').match(/.{14}/g)!;\n                default:\n                    return [props.address];\n            }\n        });\n\n        const text = computed(() => {\n            switch (props.format) {\n                case 'nimiq': return chunks.value.join(' ').toUpperCase();\n                default: return chunks.value.join('');\n            }\n        });\n\n        const chunkTrailingSpaces = computed(() => props.format === 'nimiq');\n\n        return { chunks, text, chunkTrailingSpaces };\n    },\n})\n</script>\n\n<style scoped>\n    .address-display {\n        width: 100%;\n        box-sizing: content-box;\n        color: rgba(31, 35, 72, .5); /* nimiq-blue with .5 opacity */\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        font-size: 3rem;\n    }\n\n    .format-nimiq {\n        max-width: 28.25rem;\n    }\n\n    .format-ethereum {\n        max-width: 27rem;\n    }\n\n    .address-display.copyable:hover,\n    .address-display.copyable:focus,\n    .address-display.copyable.copied {\n        font-weight: 500;\n    }\n\n    .chunk {\n        font-family: 'Fira Mono', monospace;\n        margin: 0.875rem 0;\n        line-height: 1.11;\n        text-align: center;\n        box-sizing: border-box;\n    }\n\n    .format-nimiq .chunk {\n        width: 33%;\n        text-transform: uppercase;\n    }\n\n    .format-ethereum .chunk {\n        width: 100%;\n    }\n\n    .space {\n        font-size: 0;\n    }\n</style>\n"],"names":["_sfc_main","defineComponent","Copyable","props","chunks","computed","text","chunkTrailingSpaces"],"mappings":";;AAUA,MAAAA,IAAeC,EAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,YAAY,EAAE,UAAAC,EAAS;AAAA,EACvB,OAAO;AAAA,IACH,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,MAAMC,GAAO;AACH,UAAAC,IAASC,EAAS,MAAM;AAC1B,cAAQF,EAAM,QAAQ;AAAA,QAClB,KAAK;AACD,iBAAKA,EAAM,UACJA,EAAM,QAAQ,QAAQ,SAAS,EAAE,EAAE,MAAM,OAAO,IAD5B,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,QAEpD,KAAK;AACD,iBAAKA,EAAM,UACJA,EAAM,QAAQ,QAAQ,SAAS,EAAE,EAAE,MAAM,QAAQ,IAD7B,IAAI,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,QAEpD;AACW,iBAAA,CAACA,EAAM,OAAO;AAAA,MAC7B;AAAA,IAAA,CACH,GAEKG,IAAOD,EAAS,MAAM;AACxB,cAAQF,EAAM,QAAQ;AAAA,QAClB,KAAK;AAAS,iBAAOC,EAAO,MAAM,KAAK,GAAG,EAAE,YAAY;AAAA,QACxD;AAAgB,iBAAAA,EAAO,MAAM,KAAK,EAAE;AAAA,MACxC;AAAA,IAAA,CACH,GAEKG,IAAsBF,EAAS,MAAMF,EAAM,WAAW,OAAO;AAE5D,WAAA,EAAE,QAAAC,GAAQ,MAAAE,GAAM,qBAAAC;EAC3B;AACJ,CAAC;"}