{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/Amount/Amount.vue"],"sourcesContent":["<template>\n    <span class=\"amount\" :class=\"{ approx: showApprox && isApprox }\">\n        {{ formattedAmount }}\n        <span class=\"currency\" :class=\"currency\">{{ ticker }}</span>\n    </span>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, watch } from 'vue';\nimport { FormattableNumber } from '@nimiq/utils';\n\ntype BigInteger = import ('big-integer').BigInteger;\n\nexport function amountValidator(value: any): boolean {\n    return typeof value === 'number' || typeof value === 'bigint'\n        || (value && value.constructor && value.constructor.name.endsWith('Integer'));\n}\n\nexport default defineComponent({\n    name: 'Amount',\n    props: {\n        // Amount in smallest unit\n        amount: {\n            required: true,\n            validator: amountValidator,\n            type: Number as () => number | bigint | BigInteger,\n        },\n        // If set takes precedence over minDecimals and maxDecimals\n        decimals: Number,\n        minDecimals: {\n            type: Number,\n            default: 2,\n        },\n        maxDecimals: {\n            type: Number,\n            default: 5,\n        },\n        showApprox: {\n            type: Boolean,\n            default: false,\n        },\n        currency: {\n            type: String,\n            default: 'nim',\n        },\n        currencyDecimals: {\n            type: Number,\n            default: 5,\n        },\n    },\n    setup(props, context) {\n        function validateDecimals(decimals: number | undefined) {\n            if (props.decimals !== undefined && decimals !== props.decimals) {\n                // skip validation for minDecimals and maxDecimals if they're overwritten by decimals\n                return;\n            }\n            if (\n                decimals !== undefined && (\n                    decimals < 0\n                    || decimals > props.currencyDecimals\n                    || !Number.isInteger(decimals)\n                )\n            ) {\n                throw new Error('Amount: decimals is not in range');\n            }\n        }\n\n        watch(() => props.minDecimals, validateDecimals, { immediate: true });\n        watch(() => props.maxDecimals, validateDecimals, { immediate: true });\n        watch(() => props.decimals, validateDecimals, { immediate: true });\n\n        const formattedAmount = computed(() => {\n            let minDecimals: number;\n            let maxDecimals: number;\n            if (typeof props.decimals === 'number') {\n                minDecimals = maxDecimals = props.decimals;\n            } else {\n                minDecimals = props.minDecimals;\n                maxDecimals = props.maxDecimals;\n            }\n\n            return new FormattableNumber(props.amount).moveDecimalSeparator(-props.currencyDecimals)\n                .toString({ maxDecimals, minDecimals, useGrouping: true });\n        });\n\n        const isApprox = computed(() => {\n            return !new FormattableNumber(props.amount).moveDecimalSeparator(-props.currencyDecimals)\n                .equals(formattedAmount.value.replace(/\\s/g, ''));\n        });\n\n        const ticker = computed(() => {\n            if (props.currency === 'tnim') return 'tNIM';\n\n            if (props.currency === 'mbtc') return 'mBTC';\n            if (props.currency === 'tbtc') return 'tBTC';\n\n            return props.currency.toUpperCase();\n        });\n\n        return {\n            formattedAmount,\n            isApprox,\n            ticker,\n        };\n    }\n})\n</script>\n\n<style scoped>\n    .amount {\n        white-space: nowrap;\n    }\n\n    .amount.approx::before {\n        content: '~ ';\n        opacity: 0.5;\n    }\n</style>\n"],"names":["amountValidator","value","_sfc_main","defineComponent","props","context","validateDecimals","decimals","watch","formattedAmount","computed","minDecimals","maxDecimals","FormattableNumber","isApprox","ticker"],"mappings":";;AAaO,SAASA,EAAgBC,GAAqB;AACjD,SAAO,OAAOA,KAAU,YAAY,OAAOA,KAAU,YAC7CA,KAASA,EAAM,eAAeA,EAAM,YAAY,KAAK,SAAS,SAAS;AACnF;AAEA,MAAAC,IAAeC,EAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO;AAAA,IAEH,QAAQ;AAAA,MACJ,UAAU;AAAA,MACV,WAAWH;AAAA,MACX,MAAM;AAAA,IACV;AAAA,IAEA,UAAU;AAAA,IACV,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,kBAAkB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,MAAMI,GAAOC,GAAS;AAClB,aAASC,EAAiBC,GAA8B;AACpD,UAAI,EAAAH,EAAM,aAAa,UAAaG,MAAaH,EAAM,aAKnDG,MAAa,WACTA,IAAW,KACRA,IAAWH,EAAM,oBACjB,CAAC,OAAO,UAAUG,CAAQ;AAG3B,cAAA,IAAI,MAAM,kCAAkC;AAAA,IAE1D;AAEA,IAAAC,EAAM,MAAMJ,EAAM,aAAaE,GAAkB,EAAE,WAAW,IAAM,GACpEE,EAAM,MAAMJ,EAAM,aAAaE,GAAkB,EAAE,WAAW,IAAM,GACpEE,EAAM,MAAMJ,EAAM,UAAUE,GAAkB,EAAE,WAAW,IAAM;AAE3D,UAAAG,IAAkBC,EAAS,MAAM;AAC/B,UAAAC,GACAC;AACA,aAAA,OAAOR,EAAM,YAAa,WAC1BO,IAAcC,IAAcR,EAAM,YAElCO,IAAcP,EAAM,aACpBQ,IAAcR,EAAM,cAGjB,IAAIS,EAAkBT,EAAM,MAAM,EAAE,qBAAqB,CAACA,EAAM,gBAAgB,EAClF,SAAS,EAAE,aAAAQ,GAAa,aAAAD,GAAa,aAAa,IAAM;AAAA,IAAA,CAChE,GAEKG,IAAWJ,EAAS,MACf,CAAC,IAAIG,EAAkBT,EAAM,MAAM,EAAE,qBAAqB,CAACA,EAAM,gBAAgB,EACnF,OAAOK,EAAgB,MAAM,QAAQ,OAAO,EAAE,CAAC,CACvD,GAEKM,IAASL,EAAS,MAChBN,EAAM,aAAa,SAAe,SAElCA,EAAM,aAAa,SAAe,SAClCA,EAAM,aAAa,SAAe,SAE/BA,EAAM,SAAS,aACzB;AAEM,WAAA;AAAA,MACH,iBAAAK;AAAA,MACA,UAAAK;AAAA,MACA,QAAAC;AAAA,IAAA;AAAA,EAER;AACJ,CAAC;"}