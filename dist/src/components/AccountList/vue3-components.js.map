{"version":3,"file":"vue3-components.js","sources":["../../../../src/components/AccountList/AccountList.vue"],"sourcesContent":["<template>\n    <div class=\"account-list\">\n        <component :is=\"!isDisabled(account) && !editable ? 'a' : 'div'\"\n            href=\"javascript:void(0)\"\n            class=\"account-entry\"\n            v-for=\"account in accounts\"\n            :class=\"{\n                'disabled': isDisabled(account),\n                'has-tooltip': hasTooltip(account),\n                'highlight-insufficient-balance': highlightedDisabledAddress === account.userFriendlyAddress\n                    && hasInsufficientBalance(account)\n                    && !isDisabledContract(account)\n                    && !isDisabledAccount(account),\n            }\"\n            @click=\"accountSelected(account)\"\n            :key=\"account.userFriendlyAddress\"\n        >\n            <!-- account$ should be of type 'ComponentPublicInstance' imported from ‘vue', but types cannot be passed to template -->\n            <Account :ref=\"(account$: any) => accounts$[account.userFriendlyAddress] = account$\"\n                :address=\"account.userFriendlyAddress\"\n                :label=\"account.label\"\n                :placeholder=\"/* TODO: account.defaultLabel does not exist on type AccountInfo*/ ''\"\n                :balance=\"minBalance ? account.balance : undefined\"\n                :decimals=\"decimals\"\n                :editable=\"editable && !disabled\"\n                @changed=\"onAccountChanged(account.userFriendlyAddress, $event)\"\n            />\n\n            <CaretRightSmallIcon v-if=\"!isDisabled(account)\" class=\"caret\"/>\n            <!-- tooltip$ should be of type 'ComponentPublicInstance' imported from ‘vue', but types cannot be passed to template -->\n            <Tooltip v-if=\"hasTooltip(account)\"\n                :ref=\"(tooltip$: any) => tooltips$[`tooltip-${account.userFriendlyAddress}`] = tooltip$\"\n                v-bind=\"{\n                    preferredPosition: 'bottom left',\n                    ...tooltipProps,\n                    styles: {\n                        width: '22.25rem',\n                        pointerEvents: 'none',\n                        ...(tooltipProps ? tooltipProps.styles : undefined),\n                    },\n                }\"\n                @click.stop=\"\"\n            >\n                {{ isDisabledContract(account)\n                    ? $t('Contracts cannot be used for this operation.')\n                    : $t('This address cannot be used for this operation.')\n                }}\n            </Tooltip>\n        </component>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onBeforeUpdate, ref } from 'vue'\nimport Account from '../Account/Account.vue';\nimport { AccountInfo, ContractInfo } from '../AccountSelector/AccountSelector.vue';\nimport Tooltip from '../Tooltip/Tooltip.vue';\nimport { CaretRightSmallIcon } from '../../icons/Icons';\nimport { loadI18n } from '../../i18n/I18nComposable';\n\nexport enum AccountListEvent {\n    ACCOUNT_SELECTED = 'account-selected',\n    ACCOUNT_CHANGED = 'account-changed',\n}\n\nexport default defineComponent({\n    name: 'AccountList',\n    emits: Object.values(AccountListEvent),\n    props: {\n        accounts: {\n            type: Array as () => Array<AccountInfo | ContractInfo>,\n            required: true,\n        },\n        disabledAddresses: {\n            type: Array as () => string[],\n            default: () => [],\n        },\n        editable: {\n            type: Boolean,\n            default: false,\n        },\n        disableContracts: {\n            type: Boolean,\n            default: false,\n        },\n        disabled: {\n            type: Boolean,\n            default: false,\n        },\n        walletId: String,\n        decimals: Number,\n        minBalance: Number,\n        tooltipProps: Object,\n    },\n    methods: { $t: loadI18n('AccountList') },\n    setup: (props, context) => {\n        const highlightedDisabledAddress = ref<string | null>(null);\n        const highlightedDisabledAddressTimeout = ref(-1);\n\n        const accounts$ = ref<Record<string, (typeof Account)>>({});\n        const tooltips$ = ref<Record<string, (typeof Tooltip)>>({});\n\n        onBeforeUpdate(() => {\n            accounts$.value = {};\n            tooltips$.value = {};\n        });\n\n        function focus(address: string) {\n            if (props.editable && accounts$.value.hasOwnProperty(address)) {\n                (accounts$.value[address] as (typeof Account)).focus();\n            }\n        }\n\n        function accountSelected(account: AccountInfo | ContractInfo) {\n            if (props.disabled || props.editable) return;\n\n            window.clearTimeout(highlightedDisabledAddressTimeout.value);\n            if (account.userFriendlyAddress !== highlightedDisabledAddress.value) {\n                clearHighlightedDisabledAddress();\n            }\n\n            const isDisabledContractBool = isDisabledContract(account);\n            const isDisabledAccountBool = isDisabledAccount(account);\n\n            if (isDisabledContractBool\n                || isDisabledAccountBool\n                || hasInsufficientBalance(account)) {\n                highlightedDisabledAddress.value = account.userFriendlyAddress;\n                if (tooltips$.value[`tooltip-${highlightedDisabledAddress.value}`]) {\n                    tooltips$.value[`tooltip-${highlightedDisabledAddress.value}`].show();\n                }\n                const waitTime = isDisabledContractBool || isDisabledAccountBool ? 2000 : 300;\n                highlightedDisabledAddressTimeout.value =\n                    window.setTimeout(() => clearHighlightedDisabledAddress(), waitTime);\n            } else {\n                context.emit(AccountListEvent.ACCOUNT_SELECTED, account.walletId || props.walletId, account.userFriendlyAddress);\n            }\n        }\n\n        function onAccountChanged(address: string, label: string) {\n            context.emit(AccountListEvent.ACCOUNT_CHANGED, address, label);\n        }\n\n        function isDisabled(account: AccountInfo | ContractInfo) {\n            return props.disabled || (!props.editable\n                && (isDisabledContract(account)\n                || isDisabledAccount(account)\n                || hasInsufficientBalance(account)));\n        }\n\n        function isDisabledContract(account: AccountInfo | ContractInfo) {\n            return props.disableContracts && !('path' in account && account.path);\n        }\n\n        function isDisabledAccount(account: AccountInfo | ContractInfo) {\n            return props.disabledAddresses.includes(account.userFriendlyAddress);\n        }\n\n        function hasInsufficientBalance(account: AccountInfo | ContractInfo) {\n            return props.minBalance && (account.balance || 0) < props.minBalance;\n        }\n\n        function hasTooltip(account: AccountInfo | ContractInfo) {\n            return !props.disabled && !props.editable\n                && (isDisabledContract(account) || isDisabledAccount(account));\n        }\n\n        function clearHighlightedDisabledAddress() {\n            if (!highlightedDisabledAddress.value) return;\n            if (tooltips$.value[`tooltip-${highlightedDisabledAddress.value}`]) {\n                // Hide tooltip if it's not hovered\n                (tooltips$.value[`tooltip-${highlightedDisabledAddress.value}`] as (typeof Tooltip)).hide(/* force */ false);\n            }\n            highlightedDisabledAddress.value = null;\n        }\n\n        context.expose({ focus });\n\n        return {\n            highlightedDisabledAddress,\n            highlightedDisabledAddressTimeout,\n            accounts$,\n            tooltips$,\n            focus,\n            accountSelected,\n            onAccountChanged,\n            isDisabled,\n            isDisabledContract,\n            isDisabledAccount,\n            hasInsufficientBalance,\n            hasTooltip,\n            clearHighlightedDisabledAddress,\n        };\n    },\n    components: {\n        Account,\n        CaretRightSmallIcon,\n        Tooltip,\n    },\n})\n</script>\n\n<style scoped>\n    .account-list {\n        flex-grow: 1;\n    }\n\n    .account-entry {\n        display: block;\n        transition: background-color .3s var(--nimiq-ease);\n        border-radius: 0.5rem;\n        margin: 0.5rem 2rem;\n        position: relative;\n        color: inherit;\n        text-decoration: none;\n    }\n\n    .account-entry:deep(.identicon img) {\n        transform: scale(0.9);\n        transition: transform .45s var(--nimiq-ease);\n    }\n\n    .account-entry:deep(.label),\n    .account-entry:deep(.balance) {\n        transition: opacity .3s var(--nimiq-ease), color .3s var(--nimiq-ease), margin-right .45s var(--nimiq-ease);\n    }\n\n    .account-entry .caret,\n    .account-entry .tooltip {\n        position: absolute;\n        right: 2rem;\n        top: 3.625rem;\n        font-size: 2rem;\n    }\n\n    .account-entry .caret {\n        transform: translateX(3rem);\n        opacity: 0;\n        transition: transform .45s var(--nimiq-ease), opacity .35s .1s var(--nimiq-ease);\n    }\n\n    a.account-entry:focus {\n        outline: none;\n    }\n\n    a.account-entry:focus::after {\n        content: \"\";\n        position: absolute;\n        left: -0.625rem;\n        top: -0.625rem;\n        right: -0.625rem;\n        bottom: -0.625rem;\n        border: 0.25rem solid rgba(5, 130, 202, 0.5); /* Based on Nimiq Light Blue */\n        border-radius: 1rem;\n        pointer-events: none;\n    }\n\n    a.account-entry:hover,\n    a.account-entry:focus {\n        background-color: rgba(31, 35, 72, 0.06); /* Based on Nimiq Blue */\n    }\n\n    a.account-entry:hover:deep(.identicon img),\n    a.account-entry:focus:deep(.identicon img) {\n        transform: scale(1);\n    }\n\n    a.account-entry:hover:deep(.label),\n    a.account-entry:hover:deep(.balance),\n    a.account-entry:focus:deep(.label),\n    a.account-entry:focus:deep(.balance) {\n        opacity: 1;\n    }\n\n    a.account-entry:hover:deep(.balance),\n    a.account-entry:focus:deep(.balance),\n    .account-entry.has-tooltip:deep(.balance) {\n        margin-right: 3rem; /* make space for caret or tooltip trigger */\n    }\n\n    a.account-entry:hover:deep(.balance),\n    a.account-entry:focus:deep(.balance) {\n        color: var(--nimiq-green);\n    }\n\n    a.account-entry:hover .caret,\n    a.account-entry:focus .caret {\n        transform: translateX(0);\n        opacity: 0.23;\n    }\n\n    .account-entry.disabled {\n        cursor: not-allowed;\n    }\n\n    .account-entry.disabled:deep(.identicon),\n    .account-entry.disabled:deep(.label),\n    .account-entry.disabled:deep(.balance) {\n        opacity: 0.2;\n    }\n\n    .account-entry.highlight-insufficient-balance:deep(.balance) {\n        color: var(--nimiq-red);\n        opacity: 1;\n    }\n</style>\n"],"names":["_component_Tooltip","_resolveComponent","_openBlock","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","account","_createBlock","_resolveDynamicComponent","$event","_component_Account","account$","_createCommentVNode","_component_CaretRightSmallIcon","_mergeProps","_cache","_withModifiers","_withCtx","_createTextVNode","_toDisplayString"],"mappings":";;;;;;;wDACIA,IAAAC,EAgDM,SAhDN;AA+CgB,SAAAC,EAAA,GAAAC,EAAA,OAAAC,GAAA;AAAA,KAAAF,EA7CH,EAAoB,GAAAC,EAAAE,GAAA,MAAAC,EAAAC,EAAA,UAAA,CAAAC,OACpBN,EAAA,GAAAO,EAACC,EAAe,CAAAH,EAAA,WAAAC,CAAA,KAAA,CAAAD,EAAA,WAAA,MAAA,KAAA,GAAA;AAAA,MAAA,MAAA;AAAA,eAEqE,CAAW,iBAAA;AAAA,QAA4D,UAAAA,EAAA,WAAAC,CAAA;AAAA,QAAA,eAAkFD,EAAuB,WAAAC,CAAA;AAAA,QAAA,kCAAoDD,EAAO,+BAA0BC,EAAA,uBAAAD,EAAA,uBAAkBC,CAAO,KAAA,CAAAD,EAAA,mBAAAC,CAAA,KAQlX,GAAE,kBAAgBA,CAAA;AAAA,MAAA,CAClB,CAAA;AAAA,MAAA,SAAA,CAAAG,MAAAJ,EAAA,gBAAAC,CAAA;AAAA;;;UAGUI,GAAkB;AAAA,UAC7B,SAAS;AAAA,UACT,KAAK,OAAUL,EAAK,UAAAC,EAAA,uBAAAK;AAAA,UACpB,SAAaL,EAAA;AAAA,UACb,OAAOA,EAAE;AAAA,UACT,aAAkB;AAAA,UAClB,SAAQD,EAAE,aAAQC,EAAK,UAAQ;AAAA,UAC/B,UAAOD,EAAA;AAAA,UAAA,UAAAA,EAAA,YAAA,CAAAA,EAAA;AAAA,UAGgB,WAAA,CAAAI,MAAWJ,EAAO,iBAAAC,EAAA,qBAAAG,CAAA;AAAA,QAAA,GAAA,MAAA,GAAA,CAAA,WAA9C,SAAgE,eAAA,WAAA,YAAA,YAAA,WAAA,CAAA;AAAA,QAAAJ,EAAA,WAAAC,CAAA,IAEjDM,EAAf,IAiBU,EAAA,KAnBsDZ,EAAF,GAAAO,EAAAM,GAAA;AAAA,UAAA,KAAA;AAAA;QAE/C,CAAA;AAAA,QAiBLR,EAAA,WAAAC,CAAA,KAAAN,EAAA,GAAAO,EAAAT,GAAAgB,EAAA;AAAA,UAhBL,KAAG;AAAA,UAAA,SAAA;AAAA;;;;;YACqP,OAAA;AAAA,YAAA,eAAA;AAAA;UASxP;AAAA,QAAA,GAAA;AAAA,UAKC,SAAAC,EAAA,OAAAA,EAAA,KAAAC,EAAA,MAAA;AAAA,UAAA,GAAA,CAAA,MAAA,CAAA;AAAA,QAAA,CAAA,GAAA;AAAA,mBAHmDC,EAAE,MAAA;AAAA,YAAyEC,EAAAC,EAAAd,EAAA,mBAAAC,CAAA,IAAAD,EAAA,GAAA,8CAAA,IAAAA,EAAA,GAAA,iDAAA,CAAA,GAAA,CAAA;AAAA;;;;;;;;;"}