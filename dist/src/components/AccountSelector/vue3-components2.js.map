{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/AccountSelector/AccountSelector.vue"],"sourcesContent":["<template>\n    <div class=\"account-selector\">\n        <div ref=\"container$\" class=\"container\" :class=\"{'extra-spacing': wallets.length === 1}\">\n            <div v-for=\"wallet in sortedWallets\" :key=\"wallet.id\">\n                <div v-if=\"wallets.length > 1 || isAccountDisabled(wallet)\" class=\"wallet-label\">\n                    <div class=\"nq-label\">\n                        {{ wallet.label }}\n                        <span v-if=\"highlightBitcoinAccounts && wallet.btcXPub\" class=\"btc-pill\">BTC</span>\n                    </div>\n                    <!-- tooltip$ should be of type 'ComponentPublicInstance' imported from â€˜vue', but types cannot be passed to template -->\n                    <Tooltip\n                        v-if=\"isAccountDisabled(wallet)\"\n                        :ref=\"(tooltip$: any) => tooltips$[`tooltip-${wallet.id}`] = tooltip$\"\n                        :margin=\"tooltipProps.margin\"\n                        :container=\"tooltipProps.container || undefined\"\n                        :preferredPosition=\"tooltipProps.preferredPosition\"\n                        :styles=\"{ width: '25.25rem', ...tooltipProps.styles }\"\n                    >\n                        {{ $t(\n                            '{type} accounts cannot be used for this operation.',\n                            { type: getAccountTypeName(wallet)},\n                        ) }}\n                    </Tooltip>\n                </div>\n                <AccountList\n                    :accounts=\"sortAccountsAndContracts(listAccountsAndContracts(wallet), minBalance, disableContracts, disabledAddresses)\"\n                    :disabledAddresses=\"disabledAddresses\"\n                    :walletId=\"wallet.id\"\n                    :minBalance=\"minBalance\"\n                    :decimals=\"decimals\"\n                    :disableContracts=\"disableContracts\"\n                    :disabled=\"isAccountDisabled(wallet)\"\n                    :tooltipProps=\"tooltipProps\"\n                    @account-selected=\"onAccountSelected\"\n                    @click=\"accountClicked(wallet)\"\n                />\n            </div>\n        </div>\n\n        <div class=\"footer\">\n            <button v-if=\"allowLogin\" class=\"nq-button-s\" @click=\"onLogin\">{{ $t('Login to another account') }}</button>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onBeforeUpdate, ref } from 'vue';\nimport AccountList from '../AccountList/AccountList.vue';\nimport Tooltip from '../Tooltip/Tooltip.vue';\nimport { loadI18n } from '../../i18n/I18nComposable';\n\n// This is a reduced list of properties, for convenience\nexport interface ContractInfo {\n    label: string;\n    userFriendlyAddress: string;\n    balance?: number;\n    walletId?: string;\n}\n\nexport interface AccountInfo {\n    path: string;\n    label: string;\n    // address: Nimiq.Address; // Nimiq namespace is not known and not used by @nimiq/vue-components\n    userFriendlyAddress: string;\n    balance?: number;\n    walletId?: string;\n}\n\nexport interface WalletInfo {\n    id: string;\n    label: string;\n    accounts: Map<string, AccountInfo>;\n    contracts: ContractInfo[];\n    type: number;\n    keyMissing: boolean;\n    btcXPub?: string;\n}\n\nexport enum AccountSelectorEvent {\n    ACCOUNT_SELECTED = 'account-selected',\n    LOGIN = 'login',\n}\n\nexport default defineComponent({\n    name: 'AccountSelector',\n    emits: Object.values(AccountSelectorEvent),\n    components: { AccountList, Tooltip },\n    props: {\n        wallets: {\n            type: Array as () => WalletInfo[],\n            required: true,\n        },\n        disabledAddresses: {\n            type: Array as () => string[],\n            default: () => [],\n        },\n        allowLogin: {\n            type: Boolean,\n            default: true,\n        },\n        decimals: Number,\n        minBalance: Number,\n        disableContracts: {\n            type: Boolean,\n            default: false,\n        },\n        disableLegacyAccounts: {\n            type: Boolean,\n            default: false,\n        },\n        disableBip39Accounts: {\n            type: Boolean,\n            default: false,\n        },\n        disableLedgerAccounts: {\n            type: Boolean,\n            default: false,\n        },\n        highlightBitcoinAccounts: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    methods: { $t: loadI18n('AccountSelector') },\n    setup: (props, context) => {\n        const container$ = ref<HTMLElement | null>(null);\n        const tooltips$ = ref<Record<string, (typeof Tooltip)>>({});\n\n        onBeforeUpdate(() => tooltips$.value = {});\n\n        const shownTooltip = ref<typeof Tooltip | null>(null);\n        const hideTooltipTimeout = ref(-1);\n        const tooltipProps = ref({\n            get container() { return container$.value } ,\n            preferredPosition: 'bottom right',\n            margin: {\n                left: 16,\n                right: 16,\n                top: 32, // avoid that tooltips get affected by mask image\n                bottom: 32,\n            },\n            styles: {\n                pointerEvents: 'none',\n            },\n        });\n\n        const sortedWallets = computed<WalletInfo[]>(() => {\n            return props.wallets.slice(0).sort((a: WalletInfo, b: WalletInfo): number => {\n                const aDisabled = isAccountDisabled(a);\n                const bDisabled = isAccountDisabled(b);\n\n                if (aDisabled && !bDisabled) return 1;\n                if (!aDisabled && bDisabled) return -1;\n\n                if (!props.minBalance) return 0; // don't sort by balance if no minBalance required\n\n                const hasAddressWithSufficientBalance = (accounts: Map<string, AccountInfo>, contracts: ContractInfo[]) =>\n                    Array.from(accounts.values()).some((account) => (account.balance || 0) >= (props.minBalance || 0))\n                        || (!props.disableContracts && contracts.some((contract) => (contract.balance || 0) >= (props.minBalance || 0)));\n\n                const aHasAddressWithSufficientBalance = hasAddressWithSufficientBalance(a.accounts, a.contracts);\n                const bHasAddressWithSufficientBalance = hasAddressWithSufficientBalance(b.accounts, b.contracts);\n\n                if (!aHasAddressWithSufficientBalance && bHasAddressWithSufficientBalance) return 1;\n                if (aHasAddressWithSufficientBalance && !bHasAddressWithSufficientBalance) return -1;\n\n                return 0;\n            });\n        });\n\n        function onAccountSelected(walletId: string, address: string) {\n            context.emit(AccountSelectorEvent.ACCOUNT_SELECTED, { walletId, address });\n        }\n\n        function onLogin() {\n            context.emit(AccountSelectorEvent.LOGIN);\n        }\n\n        function isAccountDisabled(account: WalletInfo): boolean {\n            return props.disableLegacyAccounts && account.type === 1 /* LEGACY */\n                || props.disableBip39Accounts && account.type === 2 /* BIP39 */\n                || props.disableLedgerAccounts && account.type === 3 /* LEDGER */;\n        }\n\n        function getAccountTypeName(account: WalletInfo): string {\n            switch (account.type) {\n                case 1: return loadI18n('AccountSelector')('Legacy');\n                case 2: return 'Keyguard';\n                case 3: return 'Ledger';\n                default: throw new Error(`Unknown account type ${account.type}`);\n            }\n        }\n\n        function accountClicked(account: WalletInfo) {\n            window.clearTimeout(hideTooltipTimeout.value);\n\n            const tooltip = tooltips$.value[`tooltip-${account.id}`]\n                ? tooltips$.value[`tooltip-${account.id}`][0]\n                : null;\n\n            if (shownTooltip.value && shownTooltip.value !== tooltip) {\n                shownTooltip.value.hide(/* force */ false);\n            }\n\n            if (tooltip) {\n                tooltip.show();\n                hideTooltipTimeout.value = window.setTimeout(() => {\n                    tooltip.hide(/* force */ false);\n                    shownTooltip.value = null;\n                }, 2000);\n            }\n\n            shownTooltip.value = tooltip;\n        }\n\n        function listAccountsAndContracts(wallet: WalletInfo): Array<AccountInfo|ContractInfo> {\n            return [ ...wallet.accounts.values(), ...wallet.contracts ];\n        }\n\n        function sortAccountsAndContracts(\n            accounts: Array<AccountInfo | ContractInfo>,\n            minBalance?: number,\n            disableContracts?: boolean,\n            disabledAddresses?: string[],\n        ): Array<AccountInfo | ContractInfo> {\n            if (!minBalance) return accounts;\n\n            return accounts.sort((a: AccountInfo|ContractInfo, b: AccountInfo|ContractInfo): number => {\n                // sort disabled contracts to the end\n                const aIsDisabledContract = disableContracts && !('path' in a && a.path);\n                const bIsDisabledContract = disableContracts && !('path' in b && b.path);\n                if (aIsDisabledContract && !bIsDisabledContract) return 1;\n                if (!aIsDisabledContract && bIsDisabledContract) return -1;\n\n                // sort disabled addresses below other addresses\n                const aIsDisabledAddress = disabledAddresses && disabledAddresses.includes(a.userFriendlyAddress);\n                const bIsDisabledAddress = disabledAddresses && disabledAddresses.includes(b.userFriendlyAddress);\n                if (aIsDisabledAddress && !bIsDisabledAddress) return 1;\n                if (!aIsDisabledAddress && bIsDisabledAddress) return -1;\n\n                // sort accounts with insufficient funds below accounts with enough balance\n                if ((!a.balance || a.balance < minBalance) && b.balance && b.balance >= minBalance) return 1;\n                if ((!b.balance || b.balance < minBalance) && a.balance && a.balance >= minBalance) return -1;\n\n                return 0;\n            });\n        }\n\n        return {\n            container$,\n            tooltips$,\n            tooltipProps,\n            sortedWallets,\n            onAccountSelected,\n            onLogin,\n            listAccountsAndContracts,\n            sortAccountsAndContracts,\n            isAccountDisabled,\n            getAccountTypeName,\n            accountClicked,\n        };\n    }\n})\n</script>\n\n<style scoped>\n    .account-selector {\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        height: 400px;\n    }\n\n    .container {\n        overflow-y: auto;\n        padding-top: 0.5rem;\n        padding-bottom: 4rem;\n        flex-grow: 1;\n        mask-image: linear-gradient(0deg , rgba(255,255,255,0), rgba(255,255,255, 1) 4rem,\n            rgba(255,255,255,1) calc(100% - 4rem), rgba(255,255,255,0));\n    }\n\n    .container.extra-spacing {\n        padding-top: 3rem;\n    }\n\n    .wallet-label {\n        margin: 3.5rem 2rem 2rem 3rem;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n    }\n\n    .wallet-label .nq-label {\n        margin: 0;\n    }\n\n    .wallet-label .tooltip {\n        margin-left: 1rem;\n    }\n\n    .wallet-label::after {\n        content: '';\n        display: block;\n        flex-grow: 1;\n        height: 1px;\n        margin-left: 2rem;\n        background: rgba(31, 35, 72, 0.1);\n    }\n\n    .btc-pill {\n        background: #F7931A; /* Bitcoin orange */\n        color: white;\n        font-weight: bold;\n        font-size: 1.5rem;\n        padding: 0.25rem 0.75rem;\n        border-radius: 2rem;\n        margin-left: 0.25rem;\n    }\n\n    .footer {\n        padding: 4rem 0 3rem;\n        margin-top: -4rem;\n        text-align: center;\n    }\n\n    .nq-button-s {\n        margin: auto;\n        pointer-events: all;\n    }\n</style>\n"],"names":["AccountSelectorEvent","_sfc_main","defineComponent","AccountList","Tooltip","loadI18n","props","context","container$","ref","tooltips$","onBeforeUpdate","shownTooltip","hideTooltipTimeout","tooltipProps","sortedWallets","computed","a","b","aDisabled","isAccountDisabled","bDisabled","hasAddressWithSufficientBalance","accounts","contracts","account","contract","aHasAddressWithSufficientBalance","bHasAddressWithSufficientBalance","onAccountSelected","walletId","address","onLogin","getAccountTypeName","accountClicked","tooltip","listAccountsAndContracts","wallet","sortAccountsAndContracts","minBalance","disableContracts","disabledAddresses","aIsDisabledContract","bIsDisabledContract","aIsDisabledAddress","bIsDisabledAddress"],"mappings":"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"}