{"version":3,"file":"vue3-components2.js","sources":["../../../../src/components/PaymentInfoLine/PaymentInfoLine.vue"],"sourcesContent":["<template>\n    <div class=\"info-line\" :class=\"{ 'inverse-theme': theme === PaymentInfoLineThemes.INVERSE }\">\n        <div class=\"amounts\"\n            @mouseenter=\"priceTooltip$ && priceTooltip$.show()\"\n            @mouseleave=\"priceTooltip$ && priceTooltip$.hide()\"\n            @click=\"priceTooltip$ && Date.now() - lastTooltipToggle > 200 && priceTooltip$.toggle()\"\n        >\n            <Amount\n                :currency=\"cryptoAmount.currency\"\n                :amount=\"cryptoAmount.amount\"\n                :currencyDecimals=\"cryptoAmount.decimals\"\n                :minDecimals=\"0\"\n                :maxDecimals=\"Math.min(4, cryptoAmount.decimals)\"\n            />\n            <Tooltip ref=\"priceTooltip$\"\n                v-if=\"fiatAmount\"\n                :container=\"tooltipContainer\"\n                preferredPosition=\"bottom left\"\n                :margin=\"{ left: 8 }\"\n                :styles=\"{\n                    minWidth: '37rem',\n                    padding: '2rem',\n                    lineHeight: '1.3',\n                }\"\n                :theme=\"theme === PaymentInfoLineThemes.INVERSE ? TooltipThemes.INVERSE : TooltipThemes.NORMAL\"\n                @show=\"onPriceTooltipToggle(true)\"\n                @hide=\"onPriceTooltipToggle(false)\"\n                @click.stop=\"\"\n                class=\"price-tooltip\"\n            >\n                <template #trigger>\n                    <AlertTriangleIcon v-if=\"isBadRate\" />\n                    <FiatAmount :currency=\"fiatAmount.currency\" :amount=\"fiatAmount.amount\" />\n                </template>\n                <template #default>\n                    <div class=\"price-breakdown\">\n                        <label>{{ $t('Order amount') }}</label>\n                        <FiatAmount :currency=\"fiatAmount.currency\" :amount=\"fiatAmount.amount\" />\n                        <template v-if=\"vendorMarkup || vendorMarkup === 0\">\n                            <label v-if=\"vendorMarkup >= 0\">{{ $t('Vendor crypto markup') }}</label>\n                            <label v-else>{{ $t('Vendor crypto discount') }}</label>\n                            <div>{{ formattedVendorMarkup }}</div>\n                        </template>\n                        <label :class=\"{ 'nq-orange': isBadRate }\">\n                            {{ $t('Effective rate') }}\n                        </label>\n                        <div :class=\"{ 'nq-orange': isBadRate }\" v-if=\"effectiveRate\">\n                            <FiatAmount :currency=\"fiatAmount.currency\" :amount=\"effectiveRate\"\n                                :maxRelativeDeviation=\".0001\"\n                            />\n                            / {{ cryptoAmount.currency.toUpperCase() }}\n                        </div>\n                    </div>\n                    <div v-if=\"rateInfo()\"\n                        :class=\"{ 'nq-orange': isBadRate }\"\n                        class=\"rate-info info\"\n                    >\n                        {{ rateInfo() }}\n                    </div>\n                    <div class=\"free-service-info info\">{{ $t('Nimiq provides this service free of charge.') }}</div>\n                    <hr>\n                    <div class=\"total\">\n                        <label>{{ $t('Total') }}</label>\n                        <Amount\n                            :currency=\"cryptoAmount.currency\"\n                            :amount=\"cryptoAmount.amount\"\n                            :currencyDecimals=\"cryptoAmount.decimals\"\n                            :minDecimals=\"0\"\n                            :maxDecimals=\"Math.min(8, cryptoAmount.decimals)\"\n                            showApprox\n                        />\n                    </div>\n                    <div v-if=\"networkFee === undefined || networkFee === null || Number(networkFee) !== 0\"\n                        class=\"network-fee-info info\"\n                    >\n                        +\n                        <I18n v-if=\"!isFormattedNetworkFeeZero\"\n                            path=\"{amount} suggested network fee\"\n                            componentName=\"PaymentInfoLine\">\n                            <template #amount>\n                                <Amount\n                                    v-if=\"networkFee\"\n                                    :currency=\"cryptoAmount.currency\"\n                                    :amount=\"networkFee\"\n                                    :currencyDecimals=\"cryptoAmount.decimals\"\n                                    :minDecimals=\"0\"\n                                    :maxDecimals=\"Math.min(6, cryptoAmount.decimals)\"\n                                />\n                            </template>\n                        </I18n>\n                        <template v-else>{{ $t('network fee') }}</template>\n                    </div>\n                </template>\n            </Tooltip>\n        </div>\n        <div class=\"arrow-runway\">\n            <ArrowRightSmallIcon/>\n        </div>\n        <Account :address=\"address\" :image=\"shopLogoUrl\" :label=\"originDomain\" />\n        <Timer\n            v-if=\"startTime && endTime\"\n            ref=\"timer$\"\n            :startTime=\"startTime\"\n            :endTime=\"endTime\"\n            :theme=\"theme\"\n            :tooltipProps=\"{\n                container: tooltipContainer,\n                margin: { right: 8 },\n            }\"\n        />\n    </div>\n</template>\n\n<script lang=\"ts\">\n// this imports only the type without bundling the library\ntype BigInteger = import('big-integer').BigInteger;\n\nimport { computed, defineComponent, nextTick, onMounted, onUnmounted, PropType, ref, watch } from 'vue';\nimport { FiatApiSupportedFiatCurrency, FiatApiSupportedCryptoCurrency, getExchangeRates } from '@nimiq/utils';\nimport Account from '../Account/Account.vue';\nimport Timer from '../Timer/Timer.vue';\nimport Amount, { amountValidator } from '../Amount/Amount.vue';\nimport FiatAmount from '../FiatAmount/FiatAmount.vue';\nimport Tooltip, { TooltipThemes } from '../Tooltip/Tooltip.vue';\nimport { AlertTriangleIcon, ArrowRightSmallIcon } from '../../icons/Icons';\nimport I18n from '../../i18n/I18n';\nimport { loadI18n } from '../../i18n/I18nComposable';\n\nfunction cryptoAmountInfoValidator(value: any) {\n    return 'amount' in value && 'currency' in value && 'decimals' in value\n        && amountValidator(value.amount)\n        && typeof value.currency === 'string'\n        && typeof value.decimals === 'number' && Number.isInteger(value.decimals);\n}\n\nfunction fiatAmountInfoValidator(value: any) {\n    return 'amount' in value && 'currency' in value\n        && typeof value.amount === 'number'\n        && typeof value.currency === 'string';\n}\n\nconst PAYMENT_INFO_LINE_REFERENCE_RATE_UPDATE_INTERVAL = 60000; // every minute\nconst PAYMENT_INFO_LINE_RATE_DEVIATION_THRESHOLD = .1;\n\nexport enum PaymentInfoLineThemes {\n    NORMAL = 'normal',\n    INVERSE = 'inverse',\n}\n\nexport default defineComponent({\n    name: 'PaymentInfoLine',\n    props: {\n        cryptoAmount: {\n            type: Object as PropType<{ amount: number, currency: string, decimals: number }>,\n            required: true,\n            validator: cryptoAmountInfoValidator,\n        },\n        fiatAmount: {\n            type: Object as PropType<{ amount: number, currency: string }>,\n            validator: fiatAmountInfoValidator,\n        },\n        // Note that vendorMarkup and networkFee have no effect if fiatAmount is not set, as the tooltip in which they\n        // appear is only visible when fiatAmount is set. As the fiatAmount was only introduced in the v2 checkout request\n        // in the Hub, the tooltip and vendorMarkup and networkFee are thus never visible for v1 checkout requests. This\n        // should be ok though as the vendorMarkup also only exists in v2 and the free-service-info doesn't make too much\n        // sense for nimiq.shop or the nimiq voting app which are currently the main apps using the v1 checkout.\n        vendorMarkup: {\n            type: Number,\n            validator: (value: any) => value > -1\n        },\n        networkFee: {\n            type: Number as () => number | bigint | BigInteger,\n            validator: amountValidator,\n        },\n        origin: {\n            type: String,\n            required: true,\n        },\n        address: String,\n        shopLogoUrl: String,\n        startTime: Number,\n        endTime: Number,\n        theme: {\n            type: String as PropType<PaymentInfoLineThemes>,\n            validator: (value: any) => Object.values(PaymentInfoLineThemes).includes(value),\n            default: 'normal',\n        },\n        tooltipContainer: HTMLElement,\n    },\n    methods: { $t: loadI18n('PaymentInfoLine') },\n    setup(props, context) {\n        const timer$ = ref<typeof Timer | null>(null);\n        const priceTooltip$ = ref<typeof Tooltip | null>(null);\n\n        const referenceRate = ref<number | null>(null);\n        const referenceRateUpdateTimeout = ref(-1);\n        const lastTooltipToggle = ref(-1);\n\n        onMounted(() => updateReferenceRate());\n        onUnmounted(() => window.clearTimeout(referenceRateUpdateTimeout.value));\n\n        async function setTime(time: number) {\n            await nextTick(); // let vue update in case the timer was just added\n            if (!timer$.value) return;\n            timer$.value.synchronize(time);\n        }\n\n        context.expose({ setTime });\n\n        const originDomain = computed(() => {\n            return props.origin.split('://')[1];\n        });\n\n        const effectiveRate = computed(() => {\n            if (!props.fiatAmount) return null;\n            // Fiat/crypto rate. Higher fiat/crypto rate means user is paying less crypto for the requested fiat amount\n            // and is therefore better for the user. Note: precision loss should be acceptable here.\n            return props.fiatAmount.amount / (Number(props.cryptoAmount.amount) / (10 ** props.cryptoAmount.decimals));\n        });\n\n        const formattedVendorMarkup = computed(() => {\n            if (typeof props.vendorMarkup !== 'number') return null;\n            // Convert to percent and round to two decimals. Always ceil to avoid displaying a lower fee than charged or\n            // larger discount than applied. Subtract a small epsilon to avoid that numbers get rounded up as a result of\n            // floating point imprecision after multiplication. Otherwise formatting for example .07 would result in 7.01%.\n            return `${props.vendorMarkup >= 0 ? '+' : ''}${Math.ceil(props.vendorMarkup * 100 * 100 - 1e-10) / 100}%`;\n        });\n\n        const isFormattedNetworkFeeZero = computed(() => {\n            if (props.networkFee === null || props.networkFee === undefined) return true;\n            // Note: While we use the Amount component which does formatting itself, we manually format here to check\n            // whether the formatted value is 0. Precision loss should be acceptable here.\n            const networkFeeBaseCurrency = Number(props.networkFee) / (10 ** props.cryptoAmount.decimals);\n            // Round to maxDecimals used above in the template\n            const maxDecimals = Math.min(6, props.cryptoAmount.decimals);\n            const roundingFactor = 10 ** maxDecimals;\n            return Math.round(networkFeeBaseCurrency * roundingFactor) / roundingFactor === 0;\n        });\n\n        const rateDeviation = computed(() => {\n            // Compare rates. Convert them from fiat/crypto to crypto/fiat as the user will be paying crypto in the end and\n            // the flipped rates can therefore be compared more intuitively. Negative rate deviation is better for the user.\n            if (effectiveRate.value === null || referenceRate.value === null) return null;\n            const flippedEffectiveRate = 1 / effectiveRate.value;\n            const flippedReferenceRate = 1 / referenceRate.value;\n            return (flippedEffectiveRate - flippedReferenceRate) / flippedReferenceRate;\n        });\n\n        const isBadRate = computed(() => {\n            if (rateDeviation.value === null) return false;\n            return rateDeviation.value >= PAYMENT_INFO_LINE_RATE_DEVIATION_THRESHOLD\n                || (props.vendorMarkup\n                    && props.vendorMarkup < 0 // verify promised discount\n                    && rateDeviation.value >= props.vendorMarkup + PAYMENT_INFO_LINE_RATE_DEVIATION_THRESHOLD\n                );\n        });\n\n        const formattedRateDeviation = computed(() => {\n            if (rateDeviation.value === null) return null;\n            // Converted to absolute percent, rounded to one decimal\n            return `${Math.round(Math.abs(rateDeviation.value) * 100 * 10) / 10}%`;\n        });\n\n        function rateInfo() {\n            const $t = loadI18n('PaymentInfoLine');\n\n            // Note: this method is not a getter / computed property to update on language changes\n            if (rateDeviation.value === null || formattedRateDeviation.value === null\n                || (Math.abs(rateDeviation.value) < PAYMENT_INFO_LINE_RATE_DEVIATION_THRESHOLD && !isBadRate.value)) {\n                return null;\n            }\n\n            if (rateDeviation.value < 0 && isBadRate.value) {\n                // False discount\n                return $t(\n                    'Your actual discount is approx. {formattedRateDeviation} compared '\n                    + 'to the current market rate (coingecko.com).',\n                    { formattedRateDeviation: formattedRateDeviation.value },\n                );\n            }\n\n            if (rateDeviation.value > 0) {\n                return $t(\n                    'You are paying approx. {formattedRateDeviation} more '\n                    + 'than at the current market rate (coingecko.com).',\n                    { formattedRateDeviation: formattedRateDeviation.value },\n                );\n            } else {\n                return $t(\n                    'You are paying approx. {formattedRateDeviation} less '\n                    + 'than at the current market rate (coingecko.com).',\n                    { formattedRateDeviation: formattedRateDeviation.value },\n                );\n            }\n        }\n\n        watch(() => props.cryptoAmount.currency, updateReferenceRate);\n        watch(() => props.fiatAmount && props.fiatAmount.currency, updateReferenceRate);\n        async function updateReferenceRate() {\n            window.clearTimeout(referenceRateUpdateTimeout.value);\n            const cryptoCurrency = props.cryptoAmount.currency.toLowerCase() as FiatApiSupportedCryptoCurrency;\n            const fiatCurrency = props.fiatAmount\n                ? props.fiatAmount.currency.toLowerCase() as FiatApiSupportedFiatCurrency\n                : null;\n\n            if (!props.fiatAmount || !fiatCurrency\n                || !Object.values(FiatApiSupportedFiatCurrency).includes(fiatCurrency)\n                || !Object.values(FiatApiSupportedCryptoCurrency).includes(cryptoCurrency)\n            ) {\n                referenceRate.value = null;\n                return;\n            } else {\n                const { [cryptoCurrency]: { [fiatCurrency]: newReferenceRate }} = await getExchangeRates([cryptoCurrency], [fiatCurrency]);\n                referenceRate.value = newReferenceRate || null;\n            }\n\n            referenceRateUpdateTimeout.value = window.setTimeout(\n                () => updateReferenceRate(),\n                PAYMENT_INFO_LINE_REFERENCE_RATE_UPDATE_INTERVAL,\n            );\n        }\n\n        function onPriceTooltipToggle(isShow: boolean) {\n            lastTooltipToggle.value = Date.now(); // record last toggle to avoid second toggle on click just after mouseover\n            if (!isShow) return;\n            updateReferenceRate();\n        }\n\n        return {\n            PaymentInfoLineThemes,\n            TooltipThemes,\n\n            timer$,\n            priceTooltip$,\n\n            lastTooltipToggle,\n\n            originDomain,\n            effectiveRate,\n            formattedVendorMarkup,\n            isFormattedNetworkFeeZero,\n            isBadRate,\n\n            rateInfo,\n            onPriceTooltipToggle,\n        };\n    },\n    components: {\n        Account,\n        Timer,\n        Amount,\n        FiatAmount,\n        Tooltip,\n        AlertTriangleIcon,\n        ArrowRightSmallIcon,\n        I18n,\n    },\n})\n</script>\n\n<style scoped>\n    .info-line {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        box-sizing: border-box;\n        margin: 1.75rem 2.5rem 1rem 2.375rem;\n        flex-shrink: 0;\n        font-size: 2rem;\n        line-height: 1.5;\n        font-weight: normal;\n    }\n\n    .amounts {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: .125rem;\n        cursor: default;\n    }\n\n    .amounts > .amount {\n        color: var(--nimiq-light-blue);\n        font-weight: bold;\n    }\n\n    .inverse-theme .amounts > .amount {\n        color: var(--nimiq-light-blue-on-dark, var(--nimiq-light-blue));\n    }\n\n    .amounts .trigger .nq-icon {\n        font-size: 1.625rem;\n        color: var(--nimiq-orange);\n        vertical-align: middle;\n    }\n\n    .amounts .trigger .fiat-amount {\n        margin-top: .25rem;\n        color: var(--nimiq-blue);\n        font-size: 1.625rem;\n        line-height: 1;\n        font-weight: 600;\n        opacity: .6;\n    }\n\n    .price-tooltip label {\n        font-weight: normal;\n    }\n\n    .price-tooltip .price-breakdown {\n        display: grid;\n        grid-template-columns: 1fr auto;\n        column-gap: 2rem;\n        row-gap: 1.5rem;\n        white-space: nowrap;\n    }\n\n    .price-tooltip .price-breakdown label + * {\n        justify-self: end;\n    }\n\n    .price-tooltip .info {\n        font-size: 1.625rem;\n        opacity: .5;\n    }\n\n    .price-tooltip .rate-info {\n        margin-top: .5rem;\n    }\n\n    .price-tooltip .rate-info.nq-orange {\n        opacity: 1;\n    }\n\n    .price-tooltip .free-service-info {\n        margin-top: 1.5rem;\n        color: var(--nimiq-green);\n        opacity: 1;\n    }\n\n    .price-tooltip hr {\n        margin: 2rem -1rem 1.5rem;\n        border: unset;\n        border-top: 1px solid currentColor;\n        opacity: .2;\n    }\n\n    .price-tooltip .total {\n        /* The total row is on purpose not part of the grid as the label is shorter and the value longer */\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .price-tooltip .total .amount {\n        font-weight: bold;\n    }\n\n    .price-tooltip .network-fee-info {\n        margin-top: .5rem;\n        margin-bottom: -.25rem;\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .arrow-runway {\n        flex-grow: 1;\n        min-width: 3rem;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n        overflow: hidden;\n    }\n\n    .arrow-runway .nq-icon {\n        opacity: 0;\n        font-size: 2rem;\n        animation: arrow-shooting 2.7s cubic-bezier(.2,.5,.75,.5) infinite;\n    }\n\n    @keyframes arrow-shooting {\n        0%   { transform: translate3D(-3.5rem, 0, 0); }\n        15%  { transform: translate3D(-3.5rem, 0, 0); opacity: 0; }\n        30%  { opacity: .2; }\n        70%  { opacity: .2; }\n        85%  { transform: translate3D(3rem, 0, 0); opacity: 0; }\n        100% { transform: translate3D(3rem, 0, 0); }\n    }\n\n    .account {\n        padding: 0;\n        width: auto !important;\n        flex-shrink: 1;\n    }\n\n    .account:deep(.identicon) {\n        min-width: unset;\n        width: 3.375rem;\n        height: 3.375rem;\n        margin-right: 0;\n    }\n\n    .account:deep(.account-image) {\n        border-radius: .5rem;\n        width: 3rem;\n        height: 3rem;\n        margin-top: 0;\n        margin-bottom: 0;\n    }\n\n    .account:deep(.label) {\n        padding-left: .75rem;\n        margin-bottom: .25rem;\n        font-weight: unset;\n        opacity: 1 !important;\n        /* Remove gradient-fade-out and use text-overflow instead */\n        mask-image: unset;\n        white-space: nowrap;\n        text-overflow: fade;\n    }\n\n    .timer {\n        margin: auto -.5rem auto 1rem;\n        flex-shrink: 0;\n    }\n\n    .inverse-theme .amounts .trigger .fiat-amount,\n    .inverse-theme .arrow-runway .nq-icon,\n    .inverse-theme .account:deep(.label) {\n        color: white;\n    }\n</style>\n"],"names":["cryptoAmountInfoValidator","value","amountValidator","fiatAmountInfoValidator","PAYMENT_INFO_LINE_REFERENCE_RATE_UPDATE_INTERVAL","PAYMENT_INFO_LINE_RATE_DEVIATION_THRESHOLD","PaymentInfoLineThemes","_sfc_main","defineComponent","loadI18n","props","context","timer$","ref","priceTooltip$","referenceRate","referenceRateUpdateTimeout","lastTooltipToggle","onMounted","updateReferenceRate","onUnmounted","setTime","time","nextTick","originDomain","computed","effectiveRate","formattedVendorMarkup","isFormattedNetworkFeeZero","networkFeeBaseCurrency","roundingFactor","rateDeviation","flippedEffectiveRate","flippedReferenceRate","isBadRate","formattedRateDeviation","rateInfo","$t","watch","cryptoCurrency","fiatCurrency","FiatApiSupportedFiatCurrency","FiatApiSupportedCryptoCurrency","newReferenceRate","getExchangeRates","onPriceTooltipToggle","isShow","TooltipThemes","Account","Timer","Amount","FiatAmount","Tooltip","AlertTriangleIcon","ArrowRightSmallIcon","I18n"],"mappings":"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"}